'use client';

import React, { useState, useEffect } from 'react';
import { IconX, IconLoader } from '@tabler/icons-react';
import { Deal, CreateDealRequest, UpdateDealRequest } from '@/lib/api-client';
import { useUsers } from '@/hooks/useUsers';
import { useProperties } from '@/hooks/useProperties';

interface DealFormModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSubmit: (deal: CreateDealRequest | UpdateDealRequest) => void;
  deal?: Deal | null;
  isLoading?: boolean;
}

export default function DealFormModal({ 
  isOpen, 
  onClose, 
  onSubmit, 
  deal = null, 
  isLoading = false 
}: DealFormModalProps) {
  const [formData, setFormData] = useState({
    title: '',
    type: 'sale' as 'sale' | 'rent' | 'purchase',
    status: 'active' as 'active' | 'pending' | 'completed' | 'cancelled' | 'on_hold',
    priority: 'medium' as 'low' | 'medium' | 'high',
    client_id: '',
    property_id: '',
    price: '',
    commission: '',
    description: '',
    notes: '',
    expected_close_date: '',
    responsible_agent: ''
  });

  const { users, fetchUsers } = useUsers();
  const { properties, fetchProperties } = useProperties();

  useEffect(() => {
    if (isOpen) {
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ –æ–±'—î–∫—Ç–∏ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –º–æ–¥–∞–ª–∫–∏
      if (users.length === 0) {
        fetchUsers();
      }
      if (properties.length === 0) {
        console.log('üè† –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å –∞–≥–µ–Ω—Ç–∞...');
        fetchProperties();
      } else {
        console.log('‚úÖ –ù–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞:', properties.length, '–æ–±\'—î–∫—Ç—ñ–≤');
      }

      // –Ø–∫—â–æ —Ä–µ–¥–∞–≥—É—î–º–æ —ñ—Å–Ω—É—é—á—É —É–≥–æ–¥—É
      if (deal) {
        const apiDeal = deal as any;
        setFormData({
          title: deal.title || '',
          type: apiDeal.type || deal.deal_type || 'sale',
          status: deal.status || 'active',
          priority: deal.priority || 'medium',
          client_id: deal.client_id || '',
          property_id: deal.property_id || '',
          price: (apiDeal.price || deal.value || 0).toString(),
          commission: (apiDeal.commission || '').toString(),
          description: deal.description || '',
          notes: apiDeal.notes || '',
          expected_close_date: apiDeal.expected_close_date || deal.expected_close_date || '',
          responsible_agent: deal.responsible_agent || ''
        });
      } else {
        // –°–∫–∏–¥–∞—î–º–æ —Ñ–æ—Ä–º—É –¥–ª—è –Ω–æ–≤–æ—ó —É–≥–æ–¥–∏
        setFormData({
          title: '',
          type: 'sale',
          status: 'active',
          priority: 'medium',
          client_id: '',
          property_id: '',
          price: '',
          commission: '',
          description: '',
          notes: '',
          expected_close_date: '',
          responsible_agent: ''
        });
      }
    }
  }, [isOpen, deal, users.length, properties.length, fetchUsers, fetchProperties]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (!formData.type) {
      alert("–ü–æ–ª–µ '–¢–∏–ø —É–≥–æ–¥–∏' —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º");
      return;
    }
    
    if (!formData.client_id) {
      alert("–ü–æ–ª–µ '–ö–ª—ñ—î–Ω—Ç' —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º");
      return;
    }
    
    if (!formData.property_id) {
      alert("–ü–æ–ª–µ '–û–±'—î–∫—Ç –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ' —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º");
      return;
    }
    
    const dealData = {
      title: formData.title,
      type: formData.type, // –ó–º—ñ–Ω—é—î–º–æ deal_type –Ω–∞ type
      status: formData.status,
      priority: formData.priority,
      client_id: formData.client_id,
      property_id: formData.property_id,
      price: parseFloat(formData.price) || 0, // –ó–º—ñ–Ω—é—î–º–æ value –Ω–∞ price
      commission: parseFloat(formData.commission) || 0,
      description: formData.description,
      notes: formData.notes,
      expected_close_date: formData.expected_close_date,
      // –ù–µ –ø–µ—Ä–µ–¥–∞—î–º–æ responsible_agent - –≤—ñ–Ω –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑ —Ç–æ–∫–µ–Ω–∞
    };

    console.log('üöÄ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ —É–≥–æ–¥–∏:', dealData);
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ñ –æ–±\'—î–∫—Ç–∏ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ:', properties);
    console.log('üë• –î–æ—Å—Ç—É–ø–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∏:', users);
    console.log('üí° Form data before submit:', formData);

    onSubmit(dealData as CreateDealRequest);
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-2 sm:p-4">
      <div className="bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full max-h-[95vh] sm:max-h-[90vh] overflow-y-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex justify-between items-center p-4 sm:p-6 border-b border-gray-200 dark:border-gray-700">
          <h2 className="text-lg sm:text-xl font-semibold text-gray-900 dark:text-white">
            {deal ? '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —É–≥–æ–¥—É' : '–ù–æ–≤–∞ —É–≥–æ–¥–∞'}
          </h2>
          <button
            onClick={onClose}
            className="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1"
          >
            <IconX className="h-5 w-5 sm:h-6 sm:w-6" />
          </button>
        </div>

        {/* –§–æ—Ä–º–∞ */}
        <form onSubmit={handleSubmit} className="p-4 sm:p-6 space-y-4">
          {/* –ù–∞–∑–≤–∞ —É–≥–æ–¥–∏ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              –ù–∞–∑–≤–∞ —É–≥–æ–¥–∏
            </label>
            <input
              type="text"
              name="title"
              value={formData.title}
              onChange={handleChange}
              className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
              required
            />
          </div>

          {/* –¢–∏–ø —Ç–∞ —Å—Ç–∞—Ç—É—Å */}
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                –¢–∏–ø —É–≥–æ–¥–∏
              </label>
              <select
                name="type"
                value={formData.type}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
              >
                <option key="sale" value="sale">–ü—Ä–æ–¥–∞–∂</option>
                <option key="rent" value="rent">–û—Ä–µ–Ω–¥–∞</option>
                <option key="purchase" value="purchase">–ü–æ–∫—É–ø–∫–∞</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                –°—Ç–∞—Ç—É—Å
              </label>
              <select
                name="status"
                value={formData.status}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
              >
                <option key="active" value="active">–ê–∫—Ç–∏–≤–Ω–∞</option>
                <option key="pending" value="pending">–û—á—ñ–∫—É–≤–∞–Ω–Ω—è</option>
                <option key="completed" value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω–∞</option>
                <option key="cancelled" value="cancelled">–°–∫–∞—Å–æ–≤–∞–Ω–∞</option>
              </select>
            </div>
          </div>

          {/* –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç */}
          <div>
            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç
            </label>
            <select
              name="priority"
              value={formData.priority}
              onChange={handleChange}
              className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
            >
              <option key="low" value="low">–ù–∏–∑—å–∫–∏–π</option>
              <option key="medium" value="medium">–°–µ—Ä–µ–¥–Ω—ñ–π</option>
              <option key="high" value="high">–í–∏—Å–æ–∫–∏–π</option>
            </select>
          </div>

          {/* –ö–ª—ñ—î–Ω—Ç */}
          <div>
            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              –ö–ª—ñ—î–Ω—Ç
            </label>
            <select
              name="client_id"
              value={formData.client_id}
              onChange={handleChange}
              className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
              required
            >
              <option key="" value="">–û–±–µ—Ä—ñ—Ç—å –∫–ª—ñ—î–Ω—Ç–∞</option>
              {users.map((user: any) => (
                <option key={user._id} value={user._id}>
                  {user.first_name} {user.last_name} ({user.phone})
                </option>
              ))}
            </select>
          </div>

          {/* –ù–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å */}
          <div>
            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              –û–±'—î–∫—Ç –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ
            </label>
            <select
              name="property_id"
              value={formData.property_id}
              onChange={handleChange}
              className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
              required
            >
              <option key="" value="">–û–±–µ—Ä—ñ—Ç—å –æ–±'—î–∫—Ç</option>
              {properties.map((property: any) => (
                <option key={property._id} value={property._id}>
                  {property.title} - {property.city} ({property.price} {property.currency})
                </option>
              ))}
            </select>
          </div>

          {/* –¶—ñ–Ω–∞ —Ç–∞ –∫–æ–º—ñ—Å—ñ—è */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                –¶—ñ–Ω–∞ (UAH)
              </label>
              <input
                type="number"
                name="price"
                value={formData.price}
                onChange={handleChange}
                min="0"
                step="0.01"
                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                –ö–æ–º—ñ—Å—ñ—è (UAH)
              </label>
              <input
                type="number"
                name="commission"
                value={formData.commission}
                onChange={handleChange}
                min="0"
                step="0.01"
                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
              />
            </div>
          </div>

          {/* –û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–∞—Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è */}
          <div>
            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              –û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–∞—Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è
            </label>
            <input
              type="date"
              name="expected_close_date"
              value={formData.expected_close_date}
              onChange={handleChange}
              className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
            />
          </div>

          {/* –û–ø–∏—Å */}
          <div>
            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              –û–ø–∏—Å
            </label>
            <textarea
              name="description"
              value={formData.description}
              onChange={handleChange}
              rows={3}
              className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
            />
          </div>

          {/* –ü—Ä–∏–º—ñ—Ç–∫–∏ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              –ü—Ä–∏–º—ñ—Ç–∫–∏
            </label>
            <textarea
              name="notes"
              value={formData.notes}
              onChange={handleChange}
              rows={3}
              className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
            />
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex flex-col sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-3 pt-4">
            <button
              type="button"
              onClick={onClose}
              className="w-full sm:w-auto px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 text-center"
            >
              –°–∫–∞—Å—É–≤–∞—Ç–∏
            </button>
            <button
              type="submit"
              disabled={isLoading}
              className="w-full sm:w-auto px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2"
            >
              {isLoading && <IconLoader className="h-4 w-4 animate-spin" />}
              {deal ? '–ó–±–µ—Ä–µ–≥—Ç–∏' : '–°—Ç–≤–æ—Ä–∏—Ç–∏'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}